<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>lovife&#39;s Wiki</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://wiki.lovife.cn/"/>
  <updated>2018-04-04T11:23:19.606Z</updated>
  <id>http://wiki.lovife.cn/</id>
  
  <author>
    <name>lovife</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>配置服务器</title>
    <link href="http://wiki.lovife.cn/_post/%E6%8A%80%E6%9C%AF%E5%AE%9E%E8%B7%B5/%E6%9C%8D%E5%8A%A1%E5%99%A8/Ngrok%E5%AE%9E%E7%8E%B0%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/%E9%85%8D%E7%BD%AE%E6%9C%8D%E5%8A%A1%E5%99%A8.html"/>
    <id>http://wiki.lovife.cn/_post/技术实践/服务器/Ngrok实现内网穿透/配置服务器.html</id>
    <published>2018-04-04T10:44:00.000Z</published>
    <updated>2018-04-04T11:23:19.606Z</updated>
    
    <content type="html"><![CDATA[<p>在运营商网络没有分配 公网IP ，可以用在自己的服务器上用 Ngrok 实现内网穿透 </p><div id="outline-container-sec-1" class="outline-2"><h2 id="sec-1">需要</h2><div class="outline-text-2" id="text-1"><ul class="org-ul"><li>有 公网IP 的 <code>VPS</code></li><li>自由解析的 <code>域名</code></li></ul></div></div><div id="outline-container-sec-2" class="outline-2"><h2 id="sec-2">解析域名</h2><div class="outline-text-2" id="text-2"><p>把域名 <code>mydomain.cn</code> 解析到 <code>VPS</code> 的地址，如下方式</p><pre class="example">ngrok.myrdomain.cn ----------&gt; A记录到你的 VPS IP*.ngrok.mydomain.cn ----------&gt; CNAME到ngrok.uprogrammer.cn</pre></div></div><div id="outline-container-sec-3" class="outline-2"><h2 id="sec-3">配置 <code>VPS</code></h2><div class="outline-text-2" id="text-3"></div><div id="outline-container-sec-3-1" class="outline-3"><h3 id="sec-3-1">需要安装的环境和工具</h3><div class="outline-text-3" id="text-3-1"><ul class="org-ul"><li><code>[X]</code> go </li><li><code>[X]</code> git</li><li><code>[X]</code> ngrok</li></ul></div><div id="outline-container-sec-3-1-1" class="outline-4"><h4 id="sec-3-1-1"><code>VPS</code> 为 <code>ngrok</code> 安装 <code>go</code> 环境</h4><div class="outline-text-4" id="text-3-1-1"><ul class="org-ul"><li>从 <a href="https://golang.org/dl/" rel="external nofollow noopener noreferrer" target="_blank">go 官网</a>下载最新的 go 版本 (我查询到版本为 <code>go1.10.1.linux-amd64.tar.gz</code> )，并解压到 /usr/local 目录下</li></ul><div class="org-src-container"><figure class="highlight"><table><tr><td class="code"><pre><span class="line">$ wget -c https://storage.googleapis.com/golang/go1.10.1.linux-amd64.tar.gz&#10;$ tar -C /usr/local -zxvf go1.10.1.linux-amd64.tar.gz</span><br></pre></td></tr></table></figure></div><ul class="org-ul"><li>设置相关环境</li></ul><div class="org-src-container"><figure class="highlight"><table><tr><td class="code"><pre><span class="line"> # &#21487;&#20197;&#26681;&#25454;&#33258;&#24049;&#38656;&#35201;&#35843;&#25972;&#36335;&#24452;  &#10;$ echo &#39;export GOROOT=/usr/local/go&#39; &#38;gt;&#38;gt; /etc/profile&#10;$ echo &#39;export PATH=$PATH:$GOROOT/bin&#39; &#38;gt;&#38;gt; /etc/profile&#10;$ echo &#39;export GOPATH=$HOME/go&#39; &#38;gt;&#38;gt; /etc/profile&#10;$ echo &#39;export GOROOT_BOOTSTRAP=/usr/local/go&#39; &#38;gt;&#38;gt; /etc/profile&#10;$ source /etc/profile</span><br></pre></td></tr></table></figure></div><ul class="org-ul"><li>检查是否安装成功</li></ul><div class="org-src-container"><figure class="highlight"><table><tr><td class="code"><pre><span class="line">$ go version</span><br></pre></td></tr></table></figure></div><p>安装成功输出</p><div class="org-src-container"><figure class="highlight"><table><tr><td class="code"><pre><span class="line">go version go1.10.1 linux/amd64</span><br></pre></td></tr></table></figure></div></div></div><div id="outline-container-sec-3-1-2" class="outline-4"><h4 id="sec-3-1-2">安装 <code>Git</code></h4><div class="outline-text-4" id="text-3-1-2"><p>ubuntu 上可以直接通过 <code>apt-get install git</code> 来安装 <code>git</code> 。完成以后，做相应的 git 配置。</p></div></div><div id="outline-container-sec-3-1-3" class="outline-4"><h4 id="sec-3-1-3">安装 <code>ngrok</code></h4><div class="outline-text-4" id="text-3-1-3"><ul class="org-ul"><li>下载 <code>ngrok</code> ，并修改参数</li></ul><div class="org-src-container"><figure class="highlight"><table><tr><td class="code"><pre><span class="line"> # &#26681;&#25454;&#33258;&#24049;&#30340;&#20449;&#24687;&#22635;&#20889;&#65292;&#23588;&#20854; NGROK_DOMAIN=&#34;ngrok.mydomain.cn&#34;&#10;$ cd /usr/local/&#10;$ git clone https://github.com/inconshreveable/ngrok.git&#10;$ export GOPATH=/usr/local/ngrok/&#10;$ export NGROK_DOMAIN=&#34;ngrok.mydomain.cn&#34;&#10;$ cd ngrok</span><br></pre></td></tr></table></figure></div><ul class="org-ul"><li>生成证书（必须）</li></ul><div class="org-src-container"><figure class="highlight"><table><tr><td class="code"><pre><span class="line">$ openssl genrsa -out rootCA.key 2048&#10;$ openssl req -x509 -new -nodes -key rootCA.key -subj &#34;/CN=$NGROK_DOMAIN&#34; -days 5000 -out rootCA.pem&#10;$ openssl genrsa -out server.key 2048&#10;$ openssl req -new -key server.key -subj &#34;/CN=$NGROK_DOMAIN&#34; -out server.csr&#10;$ openssl x509 -req -in server.csr -CA rootCA.pem -CAkey rootCA.key -CAcreateserial -out server.crt -days 5000</span><br></pre></td></tr></table></figure></div><ul class="org-ul"><li>将源代码目录下生成的证书文件复制到指定的位置</li></ul><div class="org-src-container"><figure class="highlight"><table><tr><td class="code"><pre><span class="line">$ cp rootCA.pem assets/client/tls/ngrokroot.crt&#10;$ cp server.crt assets/server/tls/snakeoil.crt&#10;$ cp server.key assets/server/tls/snakeoil.key</span><br></pre></td></tr></table></figure></div><ul class="org-ul"><li>如果是在国内的服务器，需要执行下面的修改，否则会由于网络原因产生库的依赖问题。香港或者国外的服务器就不需要了。</li></ul><div class="org-src-container"><figure class="highlight"><table><tr><td class="code"><pre><span class="line">$ vim /usr/local/ngrok/src/ngrok/log/logger.go&#10;$ log &#34;github.com/keepeye/log4go&#34;</span><br></pre></td></tr></table></figure></div><ul class="org-ul"><li>编译服务器，这里也同时编译了一个 linux 下的客户端。</li></ul><div class="org-src-container"><figure class="highlight"><table><tr><td class="code"><pre><span class="line"> # 64&#20301;&#31995;&#32479;&#20351;&#29992;amd64&#65292;32&#20301;&#65292;&#38656;&#35201;&#25913;&#25104;amd386&#10;$ cd /usr/local/go/src&#10;$ GOOS=linux GOARCH=amd64 ./make.bash&#10;$ cd /usr/local/ngrok/&#10;$ GOOS=linux GOARCH=amd64 make release-server release-client</span><br></pre></td></tr></table></figure></div><p>编译 Mac 客户端</p><div class="org-src-container"><figure class="highlight"><table><tr><td class="code"><pre><span class="line"> # 64&#20301;&#31995;&#32479;&#20351;&#29992;amd64&#65292;32&#20301;&#65292;&#38656;&#35201;&#25913;&#25104;amd386&#10;$ cd /usr/local/go/src&#10;$ GOOS=darwin GOARCH=amd64 ./make.bash&#10;$ cd /usr/local/ngrok/&#10;$ GOOS=darwin GOARCH=amd64 make release-client</span><br></pre></td></tr></table></figure></div><p>编译 Windows 客户端</p><div class="org-src-container"><figure class="highlight"><table><tr><td class="code"><pre><span class="line"> # 64&#20301;&#31995;&#32479;&#20351;&#29992;amd64&#65292;32&#20301;&#65292;&#38656;&#35201;&#25913;&#25104;amd386&#10;cd /usr/local/go/src&#10;GOOS=windows GOARCH=amd64 ./make.bash&#10;cd /usr/local/ngrok/&#10;GOOS=windows GOARCH=amd64 make release-client</span><br></pre></td></tr></table></figure></div></div></div></div><div id="outline-container-sec-3-2" class="outline-3"><h3 id="sec-3-2"><code>VPS</code> 服务端运行与使用</h3><div class="outline-text-3" id="text-3-2"><ul class="org-ul"><li>进入服务端目录，服务端程序文件名为 <code>ngrokd</code> ，并执行相应命令</li></ul><div class="org-src-container"><figure class="highlight"><table><tr><td class="code"><pre><span class="line"> # &#38656;&#35201; root &#26435;&#38480;&#10;$ cd /usr/local/ngrok/bin&#10;$ ./ngrokd -domain=&#34;$NGROK_DOMAIN&#34; -httpAddr=&#34;:80&#34;</span><br></pre></td></tr></table></figure></div><ul class="org-ul"><li>返回类似如下的结果，则说明服务端运行成功</li></ul><div class="org-src-container"><figure class="highlight"><table><tr><td class="code"><pre><span class="line">[04/01/18 09:32:24] [INFO] [registry] [tun] No affinity cache specified&#10;[04/01/18 09:32:24] [INFO] Listening for public http connections on [::]:80&#10;[04/01/18 09:32:24] [INFO] Listening for public https connections on [::]:443&#10;[04/01/18 09:32:24] [INFO] Listening for control and proxy connections on [::]:4443&#10;[04/01/18 09:32:24] [INFO] [metrics] Reporting every 30 seconds</span><br></pre></td></tr></table></figure></div></div></div></div><div id="outline-container-sec-4" class="outline-2"><h2 id="sec-4">客户端的运行与使用</h2><div class="outline-text-2" id="text-4"><ul class="org-ul"><li>把刚刚从 <code>VPS 服务器</code> 上生成的客户端服务器下载到本机，可以通过 <code>scp 命令</code></li></ul><div class="org-src-container"><figure class="highlight"><table><tr><td class="code"><pre><span class="line">$ scp username@servername:/path/filename /var/www/local_dir&#65288;&#26412;&#22320;&#30446;&#24405;&#65289;</span><br></pre></td></tr></table></figure></div><p>64位 mac 客户端的位置：</p><div class="org-src-container"><figure class="highlight"><table><tr><td class="code"><pre><span class="line">$ /usr/local/ngrok/bin/darwin_amd64/ngrok</span><br></pre></td></tr></table></figure></div><p>64位 windows 客户端的位置：</p><div class="org-src-container"><figure class="highlight"><table><tr><td class="code"><pre><span class="line">$ /usr/local/ngrok/bin/windows_amd64/ngrok.exe</span><br></pre></td></tr></table></figure></div><p>linux 客户端的位置：</p><div class="org-src-container"><figure class="highlight"><table><tr><td class="code"><pre><span class="line">$ /usr/local/ngrok/bin/ngrok</span><br></pre></td></tr></table></figure></div><ul class="org-ul"><li>客户端程序下载到本地以后，在 <b>本地同一目录下</b> 新建名为 <code>ngrok.cfg</code> 的文件，文件内容如下：</li></ul><div class="org-src-container"><figure class="highlight"><table><tr><td class="code"><pre><span class="line">server_addr: &#34;ngrok.mydomain.cn:4443&#34;&#10;trust_host_root_certs: false</span><br></pre></td></tr></table></figure></div><ul class="org-ul"><li>运行客户端</li></ul><div class="org-src-container"><figure class="highlight"><table><tr><td class="code"><pre><span class="line"> # windows&#36816;&#34892;&#23458;&#25143;&#31471;&#65292;&#35831;&#25226;./&#25913;&#25104;win&#39118;&#26684;&#30340;&#30446;&#24405;&#26041;&#24335;&#10; # &#21518;&#38754;&#30340;80&#26159;&#25351;&#26412;&#26426;&#31471;&#21475;&#65292;&#36825;&#37324;&#26159;&#25351;&#25226;&#26412;&#26426;&#30340;8080&#31471;&#21475;&#24320;&#25918;&#31359;&#36879;&#10; # -subdomain&#21442;&#25968;&#25351;&#30340;&#26159;&#22495;&#21517;&#65292;&#20363;&#22914;&#36825;&#37324;&#26159;test.ngrok.mydomain.cn&#10;$ ./ngrok -config=./ngrok.cfg -subdomain=test 8080</span><br></pre></td></tr></table></figure></div><ul class="org-ul"><li>返回类似如下的结果，则说明客户端运行成功</li></ul><div class="org-src-container"><figure class="highlight"><table><tr><td class="code"><pre><span class="line">Tunnel Status                 online                                                                                                        &#10;Version                       1.7/1.7                                                                                                       &#10;Forwarding                    http://test.ngrok.mydomian.cn -&#38;gt; 127.0.0.1:8080                                                            &#10;Forwarding                    https://test.ngrok.mydomian.cn -&#38;gt; 127.0.0.1:8080                                                           &#10;Web Interface                 127.0.0.1:4040                                                                                                &#10;# Conn                        0                                                                                                             &#10;Avg Conn Time                 0.00ms</span><br></pre></td></tr></table></figure></div></div></div><div id="outline-container-sec-5" class="outline-2"><h2 id="sec-5">遇到的坑</h2><div class="outline-text-2" id="text-5"><ul class="org-ul"><li>客户端可以连上，但域名不完全，显示如下：</li></ul><div class="org-src-container"><figure class="highlight"><table><tr><td class="code"><pre><span class="line">Tunnel Status                 online&#10;Version                       1.7/1.7&#10;Forwarding                    http://test. -&#38;gt; 127.0.0.1:8080&#10;Forwarding                    https://test. -&#38;gt; 127.0.0.1:8080&#10;Web Interface                 127.0.0.1:4040&#10;# Conn                        0&#10;Avg Conn Time                 0.00ms</span><br></pre></td></tr></table></figure></div><p>这种错误是由于服务端运行时环境变量没有正确配置导致的，可以显示设置域名：</p><div class="org-src-container"><figure class="highlight"><table><tr><td class="code"><pre><span class="line">$ ./ngrokd -domain=&#34;ngrok.uprogrammer.cn&#34; -httpAddr=&#34;:80&#34;</span><br></pre></td></tr></table></figure></div></div></div>Render by <a href="http://www.gnu.org/software/emacs/" rel="external nofollow noopener noreferrer" target="_blank">Emacs</a> 25.3.1 (<a href="http://orgmode.org" rel="external nofollow noopener noreferrer" target="_blank">Org</a> mode 8.2.10)]]></content>
    
    <summary type="html">
    
      
      
        

&lt;p&gt;
在运营商网络没有分配 公网IP ，可以用在自己的服务器上用 Ngrok 实现内网穿透 
&lt;/p&gt;

&lt;div id=&quot;outline-container-sec-1&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;sec-1&quot;&gt;需要&lt;/h2&gt;
&lt;div cla
      
    
    </summary>
    
      <category term="技术实践" scheme="http://wiki.lovife.cn/categories/%E6%8A%80%E6%9C%AF%E5%AE%9E%E8%B7%B5/"/>
    
      <category term="服务器" scheme="http://wiki.lovife.cn/categories/%E6%8A%80%E6%9C%AF%E5%AE%9E%E8%B7%B5/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
      <category term="Ngrok实现内网穿透" scheme="http://wiki.lovife.cn/categories/%E6%8A%80%E6%9C%AF%E5%AE%9E%E8%B7%B5/%E6%9C%8D%E5%8A%A1%E5%99%A8/Ngrok%E5%AE%9E%E7%8E%B0%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/"/>
    
    
      <category term="ngrok" scheme="http://wiki.lovife.cn/tags/ngrok/"/>
    
      <category term="skill" scheme="http://wiki.lovife.cn/tags/skill/"/>
    
  </entry>
  
  <entry>
    <title>Ngrok</title>
    <link href="http://wiki.lovife.cn/_post/%E6%8A%80%E6%9C%AF%E5%AE%9E%E8%B7%B5/%E6%9C%8D%E5%8A%A1%E5%99%A8/Ngrok%E5%AE%9E%E7%8E%B0%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/ngrok.html"/>
    <id>http://wiki.lovife.cn/_post/技术实践/服务器/Ngrok实现内网穿透/ngrok.html</id>
    <published>2018-04-04T09:02:00.000Z</published>
    <updated>2018-04-04T09:29:16.723Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://github.com/inconshreveable/ngrok" rel="external nofollow noopener noreferrer" target="_blank">Ngrok on github</a></p><blockquote><p>Ngrok is a tunneling, reverse proxy that establishes secure tunnels from a public endpoint to a locally running network service while capturing all traffic for inspection and replay.</p></blockquote><p>翻译一下：</p><blockquote><p>Ngrok是一个隧道，即建立安全通道从公共端点到本地运行的网络服务，同时捕捉检查和重播所有流量的反向代理。</p></blockquote><div id="outline-container-sec-1" class="outline-2"><h2 id="sec-1">用 ngrok 可以干嘛？</h2><div class="outline-text-2" id="text-1"><p>代理本地的数据，并将其转发到外网</p></div></div>Render by <a href="http://www.gnu.org/software/emacs/" rel="external nofollow noopener noreferrer" target="_blank">Emacs</a> 25.3.1 (<a href="http://orgmode.org" rel="external nofollow noopener noreferrer" target="_blank">Org</a> mode 8.2.10)]]></content>
    
    <summary type="html">
    
      
      
        

&lt;p&gt;
&lt;a href=&quot;https://github.com/inconshreveable/ngrok&quot; rel=&quot;external nofollow noopener noreferrer&quot; target=&quot;_blank&quot;&gt;Ngrok on github&lt;/a&gt;
&lt;/p
      
    
    </summary>
    
      <category term="技术实践" scheme="http://wiki.lovife.cn/categories/%E6%8A%80%E6%9C%AF%E5%AE%9E%E8%B7%B5/"/>
    
      <category term="服务器" scheme="http://wiki.lovife.cn/categories/%E6%8A%80%E6%9C%AF%E5%AE%9E%E8%B7%B5/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
      <category term="Ngrok实现内网穿透" scheme="http://wiki.lovife.cn/categories/%E6%8A%80%E6%9C%AF%E5%AE%9E%E8%B7%B5/%E6%9C%8D%E5%8A%A1%E5%99%A8/Ngrok%E5%AE%9E%E7%8E%B0%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/"/>
    
    
      <category term="ngrok" scheme="http://wiki.lovife.cn/tags/ngrok/"/>
    
  </entry>
  
  <entry>
    <title>welcome lovife&#39;s Wiki Site</title>
    <link href="http://wiki.lovife.cn/_post/index.html"/>
    <id>http://wiki.lovife.cn/_post/index.html</id>
    <published>2018-04-04T07:12:00.000Z</published>
    <updated>2018-04-04T08:28:33.510Z</updated>
    
    <content type="html"><![CDATA[<p>个人 Wiki 站点</p><p>want to be a active learner, but failed, never stop trying.</p><ol class="org-ol"><li>收集学习材料</li><li>手写笔记</li><li>电子笔记系统 &amp; Wiki &amp; Blog</li></ol><pre class="example">my org/|--agenda: org-agenda file|--inbox: mixed org-mode note|--note: first assimilate|  |--notebook1|  |  |--note1.org|  |  |--note1.publish|  |  | ...|  |  |--note.org|  |  `--note.publish|  | ...|  `--notebook|--wiki: make it my own|--anki: make anki card for anything important or easy to forget`--blog: for share what is worth sharing</pre><p><code>笔记</code> 在于 <code>理解和分类整理</code></p><p><code>Wiki</code> 在于 <code>积累和快速索引</code></p><p><code>Blog</code> 在于 <code>精</code></p>Render by <a href="http://www.gnu.org/software/emacs/" rel="external nofollow noopener noreferrer" target="_blank">Emacs</a> 25.3.1 (<a href="http://orgmode.org" rel="external nofollow noopener noreferrer" target="_blank">Org</a> mode 8.2.10)]]></content>
    
    <summary type="html">
    
      
      
        

&lt;p&gt;
个人 Wiki 站点
&lt;/p&gt;

&lt;p&gt;
want to be a active learner, but failed, never stop trying.
&lt;/p&gt;

&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;收集学习材料
&lt;/li&gt;
&lt;li&gt;手写笔记
&lt;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Ngrok 内网穿透 和 远程桌面</title>
    <link href="http://wiki.lovife.cn/_post/%E6%8A%80%E6%9C%AF%E5%AE%9E%E8%B7%B5/%E6%9C%8D%E5%8A%A1%E5%99%A8/Ngrok%E5%AE%9E%E7%8E%B0%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F.html"/>
    <id>http://wiki.lovife.cn/_post/技术实践/服务器/Ngrok实现内网穿透.html</id>
    <published>2018-04-01T00:00:00.000Z</published>
    <updated>2018-04-04T09:27:08.467Z</updated>
    
    <content type="html"><![CDATA[<p>尝试用 iPad 远程控制寝室的 PC，但是寝室网络并没有提供 公网IP，所以需要自己实现内网穿透，在网上发现一篇技术博客，使用 Ngrok 实现。于是跟着实践了一下，下面是成功远程桌面截图 和 ngrok 的搭建过程。</p><p><a href="./Ngrok实现内网穿透/ngrok.html">./Ngrok实现内网穿透/ngrok.html</a></p><div class="figure"><p><img src="/_post/技术实践/服务器/IMG_0604_2018-04-01_10-08-43.JPG" alt="IMG_0604_2018-04-01_10-08-43.JPG"></p></div><a id="more"></a><div id="outline-container-sec-1" class="outline-2"><h2 id="sec-1">需要</h2><div class="outline-text-2" id="text-1"><ul class="org-ul"><li>有 公网IP 的 <code>VPS</code></li><li>自由解析的 <code>域名</code></li></ul><p>我在 <a href="https://cloud.tencent.com/" rel="external nofollow noopener noreferrer" target="_blank">腾讯云</a> 上购买 <code>VPS</code> 和 <code>域名</code> ，并装上 <code>ubuntu 16.04LTS 64位</code> <a href="http://bbs.qcloud.com/thread-11554-1-1.html" rel="external nofollow noopener noreferrer" target="_blank">并使用 root 登陆</a>，可以省去很多麻烦</p></div></div><div id="outline-container-sec-2" class="outline-2"><h2 id="sec-2">解析域名</h2><div class="outline-text-2" id="text-2"><p>把域名 <code>mydomain.cn</code> 解析到 <code>VPS</code> 的地址，如下方式</p><pre class="example">ngrok.myrdomain.cn ----------&gt; A记录到你的 VPS IP*.ngrok.mydomain.cn ----------&gt; CNAME到ngrok.uprogrammer.cn</pre></div></div><div id="outline-container-sec-3" class="outline-2"><h2 id="sec-3">配置 <code>VPS</code></h2><div class="outline-text-2" id="text-3"></div><div id="outline-container-sec-3-1" class="outline-3"><h3 id="sec-3-1">需要安装的环境和工具</h3><div class="outline-text-3" id="text-3-1"><ul class="org-ul"><li><code>[X]</code> go </li><li><code>[X]</code> git</li><li><code>[X]</code> ngrok</li></ul></div><div id="outline-container-sec-3-1-1" class="outline-4"><h4 id="sec-3-1-1"><code>VPS</code> 为 <code>ngrok</code> 安装 <code>go</code> 环境</h4><div class="outline-text-4" id="text-3-1-1"><ul class="org-ul"><li>从 <a href="https://golang.org/dl/" rel="external nofollow noopener noreferrer" target="_blank">go 官网</a>下载最新的 go 版本 (我查询到版本为 <code>go1.10.1.linux-amd64.tar.gz</code> )，并解压到 /usr/local 目录下</li></ul><div class="org-src-container"><figure class="highlight"><table><tr><td class="code"><pre><span class="line">$ wget -c https://storage.googleapis.com/golang/go1.10.1.linux-amd64.tar.gz&#10;$ tar -C /usr/local -zxvf go1.10.1.linux-amd64.tar.gz</span><br></pre></td></tr></table></figure></div><ul class="org-ul"><li>设置相关环境</li></ul><div class="org-src-container"><figure class="highlight"><table><tr><td class="code"><pre><span class="line"> # &#21487;&#20197;&#26681;&#25454;&#33258;&#24049;&#38656;&#35201;&#35843;&#25972;&#36335;&#24452;  &#10;$ echo &#39;export GOROOT=/usr/local/go&#39; &#38;gt;&#38;gt; /etc/profile&#10;$ echo &#39;export PATH=$PATH:$GOROOT/bin&#39; &#38;gt;&#38;gt; /etc/profile&#10;$ echo &#39;export GOPATH=$HOME/go&#39; &#38;gt;&#38;gt; /etc/profile&#10;$ echo &#39;export GOROOT_BOOTSTRAP=/usr/local/go&#39; &#38;gt;&#38;gt; /etc/profile&#10;$ source /etc/profile</span><br></pre></td></tr></table></figure></div><ul class="org-ul"><li>检查是否安装成功</li></ul><div class="org-src-container"><figure class="highlight"><table><tr><td class="code"><pre><span class="line">$ go version</span><br></pre></td></tr></table></figure></div><p>安装成功输出</p><div class="org-src-container"><figure class="highlight"><table><tr><td class="code"><pre><span class="line">go version go1.10.1 linux/amd64</span><br></pre></td></tr></table></figure></div></div></div><div id="outline-container-sec-3-1-2" class="outline-4"><h4 id="sec-3-1-2">安装 <code>Git</code></h4><div class="outline-text-4" id="text-3-1-2"><p>ubuntu 上可以直接通过 <code>apt-get install git</code> 来安装 <code>git</code> 。完成以后，做相应的 git 配置。</p></div></div><div id="outline-container-sec-3-1-3" class="outline-4"><h4 id="sec-3-1-3">安装 <code>ngrok</code></h4><div class="outline-text-4" id="text-3-1-3"><ul class="org-ul"><li>下载 <code>ngrok</code> ，并修改参数</li></ul><div class="org-src-container"><figure class="highlight"><table><tr><td class="code"><pre><span class="line"> # &#26681;&#25454;&#33258;&#24049;&#30340;&#20449;&#24687;&#22635;&#20889;&#65292;&#23588;&#20854; NGROK_DOMAIN=&#34;ngrok.mydomain.cn&#34;&#10;$ cd /usr/local/&#10;$ git clone https://github.com/inconshreveable/ngrok.git&#10;$ export GOPATH=/usr/local/ngrok/&#10;$ export NGROK_DOMAIN=&#34;ngrok.mydomain.cn&#34;&#10;$ cd ngrok</span><br></pre></td></tr></table></figure></div><ul class="org-ul"><li>生成证书（必须）</li></ul><div class="org-src-container"><figure class="highlight"><table><tr><td class="code"><pre><span class="line">$ openssl genrsa -out rootCA.key 2048&#10;$ openssl req -x509 -new -nodes -key rootCA.key -subj &#34;/CN=$NGROK_DOMAIN&#34; -days 5000 -out rootCA.pem&#10;$ openssl genrsa -out server.key 2048&#10;$ openssl req -new -key server.key -subj &#34;/CN=$NGROK_DOMAIN&#34; -out server.csr&#10;$ openssl x509 -req -in server.csr -CA rootCA.pem -CAkey rootCA.key -CAcreateserial -out server.crt -days 5000</span><br></pre></td></tr></table></figure></div><ul class="org-ul"><li>将源代码目录下生成的证书文件复制到指定的位置</li></ul><div class="org-src-container"><figure class="highlight"><table><tr><td class="code"><pre><span class="line">$ cp rootCA.pem assets/client/tls/ngrokroot.crt&#10;$ cp server.crt assets/server/tls/snakeoil.crt&#10;$ cp server.key assets/server/tls/snakeoil.key</span><br></pre></td></tr></table></figure></div><ul class="org-ul"><li>如果是在国内的服务器，需要执行下面的修改，否则会由于网络原因产生库的依赖问题。香港或者国外的服务器就不需要了。</li></ul><div class="org-src-container"><figure class="highlight"><table><tr><td class="code"><pre><span class="line">$ vim /usr/local/ngrok/src/ngrok/log/logger.go&#10;$ log &#34;github.com/keepeye/log4go&#34;</span><br></pre></td></tr></table></figure></div><ul class="org-ul"><li>编译服务器，这里也同时编译了一个 linux 下的客户端。</li></ul><div class="org-src-container"><figure class="highlight"><table><tr><td class="code"><pre><span class="line"> # 64&#20301;&#31995;&#32479;&#20351;&#29992;amd64&#65292;32&#20301;&#65292;&#38656;&#35201;&#25913;&#25104;amd386&#10;$ cd /usr/local/go/src&#10;$ GOOS=linux GOARCH=amd64 ./make.bash&#10;$ cd /usr/local/ngrok/&#10;$ GOOS=linux GOARCH=amd64 make release-server release-client</span><br></pre></td></tr></table></figure></div><p>编译 Mac 客户端</p><div class="org-src-container"><figure class="highlight"><table><tr><td class="code"><pre><span class="line"> # 64&#20301;&#31995;&#32479;&#20351;&#29992;amd64&#65292;32&#20301;&#65292;&#38656;&#35201;&#25913;&#25104;amd386&#10;$ cd /usr/local/go/src&#10;$ GOOS=darwin GOARCH=amd64 ./make.bash&#10;$ cd /usr/local/ngrok/&#10;$ GOOS=darwin GOARCH=amd64 make release-client</span><br></pre></td></tr></table></figure></div><p>编译 Windows 客户端</p><div class="org-src-container"><figure class="highlight"><table><tr><td class="code"><pre><span class="line"> # 64&#20301;&#31995;&#32479;&#20351;&#29992;amd64&#65292;32&#20301;&#65292;&#38656;&#35201;&#25913;&#25104;amd386&#10;cd /usr/local/go/src&#10;GOOS=windows GOARCH=amd64 ./make.bash&#10;cd /usr/local/ngrok/&#10;GOOS=windows GOARCH=amd64 make release-client</span><br></pre></td></tr></table></figure></div></div></div></div><div id="outline-container-sec-3-2" class="outline-3"><h3 id="sec-3-2"><code>VPS</code> 服务端运行与使用</h3><div class="outline-text-3" id="text-3-2"><ul class="org-ul"><li>进入服务端目录，服务端程序文件名为 <code>ngrokd</code> ，并执行相应命令</li></ul><div class="org-src-container"><figure class="highlight"><table><tr><td class="code"><pre><span class="line"> # &#38656;&#35201; root &#26435;&#38480;&#10;$ cd /usr/local/ngrok/bin&#10;$ ./ngrokd -domain=&#34;$NGROK_DOMAIN&#34; -httpAddr=&#34;:80&#34;</span><br></pre></td></tr></table></figure></div><ul class="org-ul"><li>返回类似如下的结果，则说明服务端运行成功</li></ul><div class="org-src-container"><figure class="highlight"><table><tr><td class="code"><pre><span class="line">[04/01/18 09:32:24] [INFO] [registry] [tun] No affinity cache specified&#10;[04/01/18 09:32:24] [INFO] Listening for public http connections on [::]:80&#10;[04/01/18 09:32:24] [INFO] Listening for public https connections on [::]:443&#10;[04/01/18 09:32:24] [INFO] Listening for control and proxy connections on [::]:4443&#10;[04/01/18 09:32:24] [INFO] [metrics] Reporting every 30 seconds</span><br></pre></td></tr></table></figure></div></div></div></div><div id="outline-container-sec-4" class="outline-2"><h2 id="sec-4">客户端的运行与使用</h2><div class="outline-text-2" id="text-4"><ul class="org-ul"><li>把刚刚从 <code>VPS 服务器</code> 上生成的客户端服务器下载到本机，可以通过 <code>scp 命令</code></li></ul><div class="org-src-container"><figure class="highlight"><table><tr><td class="code"><pre><span class="line">$ scp username@servername:/path/filename /var/www/local_dir&#65288;&#26412;&#22320;&#30446;&#24405;&#65289;</span><br></pre></td></tr></table></figure></div><p>64位 mac 客户端的位置：</p><div class="org-src-container"><figure class="highlight"><table><tr><td class="code"><pre><span class="line">$ /usr/local/ngrok/bin/darwin_amd64/ngrok</span><br></pre></td></tr></table></figure></div><p>64位 windows 客户端的位置：</p><div class="org-src-container"><figure class="highlight"><table><tr><td class="code"><pre><span class="line">$ /usr/local/ngrok/bin/windows_amd64/ngrok.exe</span><br></pre></td></tr></table></figure></div><p>linux 客户端的位置：</p><div class="org-src-container"><figure class="highlight"><table><tr><td class="code"><pre><span class="line">$ /usr/local/ngrok/bin/ngrok</span><br></pre></td></tr></table></figure></div><ul class="org-ul"><li>客户端程序下载到本地以后，在 <b>本地同一目录下</b> 新建名为 <code>ngrok.cfg</code> 的文件，文件内容如下：</li></ul><div class="org-src-container"><figure class="highlight"><table><tr><td class="code"><pre><span class="line">server_addr: &#34;ngrok.mydomain.cn:4443&#34;&#10;trust_host_root_certs: false</span><br></pre></td></tr></table></figure></div><ul class="org-ul"><li>运行客户端</li></ul><div class="org-src-container"><figure class="highlight"><table><tr><td class="code"><pre><span class="line"> # windows&#36816;&#34892;&#23458;&#25143;&#31471;&#65292;&#35831;&#25226;./&#25913;&#25104;win&#39118;&#26684;&#30340;&#30446;&#24405;&#26041;&#24335;&#10; # &#21518;&#38754;&#30340;80&#26159;&#25351;&#26412;&#26426;&#31471;&#21475;&#65292;&#36825;&#37324;&#26159;&#25351;&#25226;&#26412;&#26426;&#30340;8080&#31471;&#21475;&#24320;&#25918;&#31359;&#36879;&#10; # -subdomain&#21442;&#25968;&#25351;&#30340;&#26159;&#22495;&#21517;&#65292;&#20363;&#22914;&#36825;&#37324;&#26159;test.ngrok.mydomain.cn&#10;$ ./ngrok -config=./ngrok.cfg -subdomain=test 8080</span><br></pre></td></tr></table></figure></div><ul class="org-ul"><li>返回类似如下的结果，则说明客户端运行成功</li></ul><div class="org-src-container"><figure class="highlight"><table><tr><td class="code"><pre><span class="line">Tunnel Status                 online                                                                                                        &#10;Version                       1.7/1.7                                                                                                       &#10;Forwarding                    http://test.ngrok.mydomian.cn -&#38;gt; 127.0.0.1:8080                                                            &#10;Forwarding                    https://test.ngrok.mydomian.cn -&#38;gt; 127.0.0.1:8080                                                           &#10;Web Interface                 127.0.0.1:4040                                                                                                &#10;# Conn                        0                                                                                                             &#10;Avg Conn Time                 0.00ms</span><br></pre></td></tr></table></figure></div></div></div><div id="outline-container-sec-5" class="outline-2"><h2 id="sec-5">遇到的坑</h2><div class="outline-text-2" id="text-5"><ul class="org-ul"><li>客户端可以连上，但域名不完全，显示如下：</li></ul><div class="org-src-container"><figure class="highlight"><table><tr><td class="code"><pre><span class="line">Tunnel Status                 online&#10;Version                       1.7/1.7&#10;Forwarding                    http://test. -&#38;gt; 127.0.0.1:8080&#10;Forwarding                    https://test. -&#38;gt; 127.0.0.1:8080&#10;Web Interface                 127.0.0.1:4040&#10;# Conn                        0&#10;Avg Conn Time                 0.00ms</span><br></pre></td></tr></table></figure></div><p>这种错误是由于服务端运行时环境变量没有正确配置导致的，可以显示设置域名：</p><div class="org-src-container"><figure class="highlight"><table><tr><td class="code"><pre><span class="line">$ ./ngrokd -domain=&#34;ngrok.uprogrammer.cn&#34; -httpAddr=&#34;:80&#34;</span><br></pre></td></tr></table></figure></div><ul class="org-ul"><li>参考博客 说</li></ul><blockquote><p>如果你对 VPS 服务器已经有其他程序占用 80 端口，而还需要 ngrok 通过80端口做内网穿透的话，可以通过 nginx 来做反向代理。</p></blockquote><p>这里留坑以后填</p></div></div><div id="outline-container-sec-6" class="outline-2"><h2 id="sec-6">远程桌面 配置</h2><div class="outline-text-2" id="text-6"><ul class="org-ul"><li>保证 PC 正确开启了远程控制</li></ul></div><div id="outline-container-sec-6-1" class="outline-3"><h3 id="sec-6-1">修改配置文件 ngrok.cfg</h3><div class="outline-text-3" id="text-6-1"><div class="org-src-container"><figure class="highlight"><table><tr><td class="code"><pre><span class="line">server_addr: &#34;ngrok.mydomain.cn:4443&#34;&#10;trust_host_root_certs: false&#10;&#10;tunnels:&#10;    ssh:&#10;       remote_port: 51001&#10;       proto:&#10;&#9; tcp: &#34;127.0.0.1:22&#34;&#10;    mstsc:&#10;&#9;remote_port: 52222&#10;&#9;proto:&#10;&#9; tcp: &#34;127.0.0.1:3389&#34;&#10;    web:&#10;     subdomain: &#34;tss&#34;&#10;     proto:&#10;       http: 80</span><br></pre></td></tr></table></figure></div><p><b>修改 subdomain: "tss"的tss为自己的域名前缀。</b></p><p>参考如下：</p><ol class="org-ol"><li><a href="http://www.linfuyan.com/ubuntu-ngrok/" rel="external nofollow noopener noreferrer" target="_blank">ubuntu搭建ngrok服务器，尽享内网穿透技术带来的福利</a></li><li><a href="https://www.lucktang.com/2557.html" rel="external nofollow noopener noreferrer" target="_blank">Ngrok远程桌面及ssh配置</a></li></ol></div></div></div>Render by <a href="http://www.gnu.org/software/emacs/" rel="external nofollow noopener noreferrer" target="_blank">Emacs</a> 25.3.1 (<a href="http://orgmode.org" rel="external nofollow noopener noreferrer" target="_blank">Org</a> mode 8.2.10)]]></content>
    
    <summary type="html">
    
      &lt;p&gt;
尝试用 iPad 远程控制寝室的 PC，但是寝室网络并没有提供 公网IP，所以需要自己实现内网穿透，在网上发现一篇技术博客，使用 Ngrok 实现。于是跟着实践了一下，下面是成功远程桌面截图 和 ngrok 的搭建过程。
&lt;/p&gt;

&lt;p&gt;
&lt;a href=&quot;./Ngrok实现内网穿透/ngrok.html&quot;&gt;./Ngrok实现内网穿透/ngrok.html&lt;/a&gt;
&lt;/p&gt;


&lt;div class=&quot;figure&quot;&gt;
&lt;p&gt;&lt;img src=&quot;/_post/技术实践/服务器/IMG_0604_2018-04-01_10-08-43.JPG&quot; alt=&quot;IMG_0604_2018-04-01_10-08-43.JPG&quot;&gt;
&lt;/p&gt;
&lt;/div&gt;
    
    </summary>
    
      <category term="技术实践" scheme="http://wiki.lovife.cn/categories/%E6%8A%80%E6%9C%AF%E5%AE%9E%E8%B7%B5/"/>
    
      <category term="服务器" scheme="http://wiki.lovife.cn/categories/%E6%8A%80%E6%9C%AF%E5%AE%9E%E8%B7%B5/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
    
      <category term="Ngrok" scheme="http://wiki.lovife.cn/tags/Ngrok/"/>
    
      <category term="ubuntu" scheme="http://wiki.lovife.cn/tags/ubuntu/"/>
    
      <category term="内网穿透" scheme="http://wiki.lovife.cn/tags/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/"/>
    
      <category term="远程桌面" scheme="http://wiki.lovife.cn/tags/%E8%BF%9C%E7%A8%8B%E6%A1%8C%E9%9D%A2/"/>
    
  </entry>
  
</feed>
